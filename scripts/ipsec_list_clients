#!/usr/bin/perl
# SPDX-License-Identifier: LGPL-2.1-or-later
# Copyright © 2008-2018 ANSSI. All Rights Reserved.

# CLIP gateway utility - list IPsec clients every 60s, and write them
# out to an output file, one per line, with the following format :
# <Client ID> : <Internal address> @ <External address>
# 
# Copyright 2010-2012 ANSSI
# Authors:
#   Vincent Strubel <clipos@ssi.gouv.fr>
#   Mickaël Salaün <clipos@ssi.gouv.fr>
# All rights reserved.

use strict;
use warnings;

sub list_clients {
	my $path = shift;
	my ($id, $extaddr, $inaddr);

	my $tmppath = "$path".".tmp";
	my $mask = umask 0022;
	unless (open OUT, ">", $tmppath) {
		print STDERR "failed to open $tmppath for output\n";
		return;
	}
	umask $mask;

	my $conn;
	foreach (@_) {
		$conn = $_;
		unless (open PIPE, "ipsec status $conn 2>&1 |") {
			print STDERR "failed to run ipsec status\n";
			return;
		}

		my @output = <PIPE>;
		close PIPE;

		PARSE:
		foreach my $line (@output) {
			if ($line =~ /^\s*$conn\[\d+\]:.*\.\.\.([\d\.]+)\[(.*)\]$/) {
				$id = $2;
				$extaddr = $1;
			}

			next PARSE unless ($id); 
			if ($line =~ /^\s*$conn\{\d+\}:\s+[\d\.\/ ]+ === (.*)\/\d+\s*$/) {
				$inaddr = $1;
				print OUT "$id : $inaddr @ $extaddr\n";
				$id = "";
			}
		}
	}

	close OUT;
	rename $tmppath, $path;
}

die "No output path specified" unless ($ARGV[0]);
die "No connection configuration specified" unless ($ARGV[1]);

while (1) {
	list_clients(@ARGV);
	sleep 10;
}
